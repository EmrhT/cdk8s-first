apiVersion: v1
kind: Service
metadata:
  name: three-tier-web-app-db-service-c8f9b433
spec:
  clusterIP: None
  externalIPs: []
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    cdk8s.io/metadata.addr: three-tier-web-app-DB-c85d8066
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: three-tier-web-app-db-c844950d
spec:
  minReadySeconds: 0
  podManagementPolicy: OrderedReady
  replicas: 2
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: three-tier-web-app-DB-c85d8066
  serviceName: three-tier-web-app-db-service-c8f9b433
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: three-tier-web-app-DB-c85d8066
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: optimized
                    operator: In
                    values:
                      - storage
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  cdk8s.io/metadata.addr: three-tier-web-app-DB-c85d8066
              topologyKey: kubernetes.io/hostname
            - labelSelector:
                matchLabels:
                  cdk8s.io/metadata.addr: three-tier-web-app-DB-c85d8066
              topologyKey: topology.kubernetes.io/zone
      automountServiceAccountToken: false
      containers:
        - env:
            - name: POSTGRES_PASSWORD
              value: password
          image: postgres:alpine3.19
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
                - -d
                - postgres
            failureThreshold: 3
            initialDelaySeconds: 1
            timeoutSeconds: 5
          name: main
          ports:
            - containerPort: 5432
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
                - -d
                - postgres
            failureThreshold: 3
            initialDelaySeconds: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 200m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 50Mi
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 5432
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: three-tier-web-app-db-defaultdenyall-c8238577
spec:
  podSelector:
    matchLabels:
      cdk8s.io/metadata.addr: three-tier-web-app-DB-c85d8066
  policyTypes:
    - Egress
    - Ingress
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: rolec87f4f71f9beeac4527463b5492968567a06ea46f-c86dfd19
rules:
  - apiGroups:
      - apps
    resourceNames:
      - three-tier-web-app-db-c844950d
    resources:
      - statefulsets
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
      - deletecollection
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: rolebindingc87f4f71f9beeac4527463b5492968567a-c89e287d
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: rolec87f4f71f9beeac4527463b5492968567a06ea46f-c86dfd19
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: frontoffice
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: three-tier-web-app-cache-c88af11f
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: three-tier-web-app-Cache-c8969bc2
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: three-tier-web-app-Cache-c8969bc2
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: optimized
                    operator: In
                    values:
                      - memory
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  cdk8s.io/metadata.addr: three-tier-web-app-Cache-c8969bc2
              topologyKey: kubernetes.io/hostname
            - labelSelector:
                matchLabels:
                  cdk8s.io/metadata.addr: three-tier-web-app-Cache-c8969bc2
              topologyKey: topology.kubernetes.io/zone
      automountServiceAccountToken: false
      containers:
        - env:
            - name: DB_HOST
              value: three-tier-web-app-db-service-c8f9b433
            - name: DB_PORT
              value: "5432"
          image: redis:7.2.3-bookworm
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            tcpSocket:
              port: 6379
          name: main
          ports:
            - containerPort: 6379
          readinessProbe:
            failureThreshold: 3
            tcpSocket:
              port: 6379
          resources:
            limits:
              cpu: 200m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 50Mi
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
            readOnlyRootFilesystem: true
            runAsNonRoot: false
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 6379
          volumeMounts:
            - mountPath: /tmp
              name: configmap-three-tier-web-app-cacheconfig-c896f750
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            name: three-tier-web-app-cacheconfig-c896f750
          name: configmap-three-tier-web-app-cacheconfig-c896f750
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: three-tier-web-app-cache-defaultdenyall-c8a9599a
spec:
  podSelector:
    matchLabels:
      cdk8s.io/metadata.addr: three-tier-web-app-Cache-c8969bc2
  policyTypes:
    - Egress
    - Ingress
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: "true"
  name: three-tier-web-app-cache-service-c8916c2d
spec:
  externalIPs: []
  ports:
    - port: 6379
      targetPort: 6379
  selector:
    cdk8s.io/metadata.addr: three-tier-web-app-Cache-c8969bc2
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allowegressc85d80663f2078391e084d398a19eba03a-c8dfa550
spec:
  egress:
    - ports:
        - port: 5432
          protocol: TCP
      to:
        - podSelector:
            matchLabels:
              cdk8s.io/metadata.addr: three-tier-web-app-DB-c85d8066
  podSelector:
    matchLabels:
      cdk8s.io/metadata.addr: three-tier-web-app-Cache-c8969bc2
  policyTypes:
    - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allowingressundefinedc85d80663f2078391e084d39-c868ac88
spec:
  ingress:
    - from:
        - podSelector:
            matchLabels:
              cdk8s.io/metadata.addr: three-tier-web-app-Cache-c8969bc2
      ports:
        - port: 5432
          protocol: TCP
  podSelector:
    matchLabels:
      cdk8s.io/metadata.addr: three-tier-web-app-DB-c85d8066
  policyTypes:
    - Ingress
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: rolec87f4f71f9beeac4527463b5492968567a06ea46f-c84b5d71
rules:
  - apiGroups:
      - apps
    resourceNames:
      - three-tier-web-app-cache-c88af11f
    resources:
      - deployments
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
      - deletecollection
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: rolebindingc87f4f71f9beeac4527463b5492968567a-c8071391
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: rolec87f4f71f9beeac4527463b5492968567a06ea46f-c84b5d71
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: frontoffice
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: three-tier-web-app-cacheconfig-c896f750
data:
  appsettings.json: |-
    {
        "host_id": "",
      
        "host_name": "My instance of the IIS Administration API",
      
        "logging": {
          "enabled": true,
          "file_name": "log-{Date}.txt",
          "min_level": "Error",
          "path": null
        },
      
        "auditing": {
          "enabled": true,
          "file_name": "audit-{Date}.txt",
          "path": null
        },
      
        "security": {
          "require_windows_authentication": true,
          "users": {
            "administrators": [
            ],
            "owners": [
            ]
          },
          "access_policy": {
            "api": {
              "users": "administrators",
              "access_key": true
            },
            "api_keys": {
              "users": "administrators",
              "access_key": false
            },
            "system": {
              "users": "owners",
              "access_key": true
            }
          }
        },
      
        "cors": {
          "rules": [
            {
              "origin": "https://contoso.com",
              "allow": true
            }
          ]
        },
      
        "files": {
          "locations": [
            {
              "alias": "inetpub",
              "path": "%systemdrive%\\inetpub",
              "claims": [
                "read"
              ]
            }
          ]
        }
      }
immutable: false
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: three-tier-web-app-web-c8d34e9d
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: three-tier-web-app-Web-c8467b8b
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: three-tier-web-app-Web-c8467b8b
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: optimized
                    operator: In
                    values:
                      - memory
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  cdk8s.io/metadata.addr: three-tier-web-app-Cache-c8969bc2
              topologyKey: kubernetes.io/hostname
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  cdk8s.io/metadata.addr: three-tier-web-app-Web-c8467b8b
              topologyKey: kubernetes.io/hostname
            - labelSelector:
                matchLabels:
                  cdk8s.io/metadata.addr: three-tier-web-app-Web-c8467b8b
              topologyKey: topology.kubernetes.io/zone
      automountServiceAccountToken: true
      containers:
        - env:
            - name: CACHE_HOST
              value: three-tier-web-app-cache-service-c8916c2d
            - name: CACHE_PORT
              value: "6379"
          image: hashicorp/http-echo
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            tcpSocket:
              port: 5678
          name: main
          ports:
            - containerPort: 5678
          readinessProbe:
            failureThreshold: 3
            tcpSocket:
              port: 5678
          resources:
            limits:
              cpu: 200m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 50Mi
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
            readOnlyRootFilesystem: true
            runAsNonRoot: false
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 5678
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: three-tier-web-app-web-defaultdenyall-c8d6239a
spec:
  podSelector:
    matchLabels:
      cdk8s.io/metadata.addr: three-tier-web-app-Web-c8467b8b
  policyTypes:
    - Egress
    - Ingress
---
apiVersion: v1
kind: Service
metadata:
  name: three-tier-web-app-web-service-c8f6a162
spec:
  externalIPs: []
  ports:
    - port: 5678
      targetPort: 5678
  selector:
    cdk8s.io/metadata.addr: three-tier-web-app-Web-c8467b8b
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: three-tier-web-app-web-webingress-c8f06c64
spec:
  rules:
    - http:
        paths:
          - backend:
              service:
                name: three-tier-web-app-web-service-c8f6a162
                port:
                  number: 5678
            path: /
            pathType: Prefix
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allowegressc8969bc24d51aca51360d2dc72d89050e5-c8f68549
spec:
  egress:
    - ports:
        - port: 6379
          protocol: TCP
      to:
        - podSelector:
            matchLabels:
              cdk8s.io/metadata.addr: three-tier-web-app-Cache-c8969bc2
  podSelector:
    matchLabels:
      cdk8s.io/metadata.addr: three-tier-web-app-Web-c8467b8b
  policyTypes:
    - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allowingressundefinedc8969bc24d51aca51360d2dc-c805d545
spec:
  ingress:
    - from:
        - podSelector:
            matchLabels:
              cdk8s.io/metadata.addr: three-tier-web-app-Web-c8467b8b
      ports:
        - port: 6379
          protocol: TCP
  podSelector:
    matchLabels:
      cdk8s.io/metadata.addr: three-tier-web-app-Cache-c8969bc2
  policyTypes:
    - Ingress
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: rolec87f4f71f9beeac4527463b5492968567a06ea46f-c8657b63
rules:
  - apiGroups:
      - apps
    resourceNames:
      - three-tier-web-app-web-c8d34e9d
    resources:
      - deployments
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
      - deletecollection
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: rolebindingc87f4f71f9beeac4527463b5492968567a-c892a663
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: rolec87f4f71f9beeac4527463b5492968567a06ea46f-c8657b63
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: frontoffice
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: three-tier-web-ap-hpa-three-tier-web-app-web-c8a93c10
spec:
  behavior:
    scaleDown:
      policies:
        - periodSeconds: 300
          type: Pods
          value: 2
      selectPolicy: Max
      stabilizationWindowSeconds: 300
    scaleUp:
      policies:
        - periodSeconds: 60
          type: Pods
          value: 4
        - periodSeconds: 60
          type: Percent
          value: 200
      selectPolicy: Max
      stabilizationWindowSeconds: 0
  maxReplicas: 100
  metrics:
    - resource:
        name: cpu
        target:
          averageUtilization: 80
          type: Utilization
      type: Resource
  minReplicas: 2
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: three-tier-web-app-web-c8d34e9d
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: three-tier-web-hpa-three-tier-web-app-cache-c801711f
spec:
  behavior:
    scaleDown:
      policies:
        - periodSeconds: 300
          type: Pods
          value: 2
      selectPolicy: Max
      stabilizationWindowSeconds: 300
    scaleUp:
      policies:
        - periodSeconds: 60
          type: Pods
          value: 4
        - periodSeconds: 60
          type: Percent
          value: 200
      selectPolicy: Max
      stabilizationWindowSeconds: 0
  maxReplicas: 100
  metrics:
    - resource:
        name: cpu
        target:
          averageUtilization: 80
          type: Utilization
      type: Resource
  minReplicas: 2
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: three-tier-web-app-cache-c88af11f
---
apiVersion: k8s.nginx.org/v1
kind: VirtualServer
metadata:
  name: three-tier-web-app-dummyvirtualserver-c8e039a2
spec:
  gunzip: true
  host: dummyhost.example.com
  listener:
    http: http-8043
  routes:
    - action:
        pass: test
      path: /test
  tls:
    secret: dummy-secret
  upstreams:
    - name: test
      port: 8000
      service: test-service
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: three-tier-web-app-nginxhelm-c81b8494
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nginx
    app.kubernetes.io/version: 1.25.3
    helm.sh/chart: nginx-15.4.4
  name: three-tier-web-app-nginxhelm-c81b8494
  namespace: test-app
spec:
  externalTrafficPolicy: Cluster
  ports:
    - name: http
      port: 80
      targetPort: http
  selector:
    app.kubernetes.io/instance: three-tier-web-app-nginxhelm-c81b8494
    app.kubernetes.io/name: nginx
  sessionAffinity: None
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: three-tier-web-app-nginxhelm-c81b8494
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nginx
    app.kubernetes.io/version: 1.25.3
    helm.sh/chart: nginx-15.4.4
  name: three-tier-web-app-nginxhelm-c81b8494
  namespace: test-app
spec:
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: three-tier-web-app-nginxhelm-c81b8494
      app.kubernetes.io/name: nginx
  strategy:
    rollingUpdate: {}
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: three-tier-web-app-nginxhelm-c81b8494
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: nginx
        app.kubernetes.io/version: 1.25.3
        helm.sh/chart: nginx-15.4.4
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: three-tier-web-app-nginxhelm-c81b8494
                    app.kubernetes.io/name: nginx
                topologyKey: kubernetes.io/hostname
              weight: 1
      automountServiceAccountToken: false
      containers:
        - env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: NGINX_HTTP_PORT_NUMBER
              value: "8080"
          image: docker.io/bitnami/nginx:latest
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 5
          name: nginx
          ports:
            - containerPort: 8080
              name: http
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 3
          resources:
            limits: {}
            requests: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
      hostIPC: false
      hostNetwork: false
      securityContext:
        fsGroup: 1001
        sysctls: []
      serviceAccountName: default
      shareProcessNamespace: false
