apiVersion: v1
kind: Service
metadata:
  name: web-cache-db-db-service-c8777995
spec:
  clusterIP: None
  externalIPs: []
  ports:
    - port: 3306
      targetPort: 3306
  selector:
    cdk8s.io/metadata.addr: web-cache-db-DB-c89da2cb
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: web-cache-db-db-c8668594
spec:
  minReadySeconds: 0
  podManagementPolicy: OrderedReady
  replicas: 2
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: web-cache-db-DB-c89da2cb
  serviceName: web-cache-db-db-service-c8777995
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: web-cache-db-DB-c89da2cb
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: optimized
                    operator: In
                    values:
                      - storage
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  cdk8s.io/metadata.addr: web-cache-db-DB-c89da2cb
              topologyKey: kubernetes.io/hostname
            - labelSelector:
                matchLabels:
                  cdk8s.io/metadata.addr: web-cache-db-DB-c89da2cb
              topologyKey: topology.kubernetes.io/zone
      automountServiceAccountToken: false
      containers:
        - image: woahbase/alpine-mysql:x86_64
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            tcpSocket:
              port: 3306
          name: main
          ports:
            - containerPort: 3306
          readinessProbe:
            failureThreshold: 3
            tcpSocket:
              port: 3306
          resources:
            limits:
              cpu: 200m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 50Mi
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 3306
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: web-cache-db-db-defaultdenyall-c8da1319
spec:
  podSelector:
    matchLabels:
      cdk8s.io/metadata.addr: web-cache-db-DB-c89da2cb
  policyTypes:
    - Egress
    - Ingress
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: rolec86525e0774d77eb60cd0de99fd358d384c391ab8-c867d947
rules:
  - apiGroups:
      - apps
    resourceNames:
      - web-cache-db-db-c8668594
    resources:
      - statefulsets
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
      - deletecollection
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: rolebindingc86525e0774d77eb60cd0de99fd358d384-c8bc11b3
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: rolec86525e0774d77eb60cd0de99fd358d384c391ab8-c867d947
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: frontoffice
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-cache-db-cache-c80d6033
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 2
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: web-cache-db-Cache-c8f87d6f
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: web-cache-db-Cache-c8f87d6f
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: optimized
                    operator: In
                    values:
                      - memory
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  cdk8s.io/metadata.addr: web-cache-db-Cache-c8f87d6f
              topologyKey: kubernetes.io/hostname
            - labelSelector:
                matchLabels:
                  cdk8s.io/metadata.addr: web-cache-db-Cache-c8f87d6f
              topologyKey: topology.kubernetes.io/zone
      automountServiceAccountToken: false
      containers:
        - env:
            - name: DB_HOST
              value: web-cache-db-db-service-c8777995
            - name: DB_PORT
              value: "3306"
          image: redis:7.2.3-bookworm
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            tcpSocket:
              port: 6379
          name: main
          ports:
            - containerPort: 6379
          readinessProbe:
            failureThreshold: 3
            tcpSocket:
              port: 6379
          resources:
            limits:
              cpu: 200m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 50Mi
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
            readOnlyRootFilesystem: true
            runAsNonRoot: false
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 6379
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: web-cache-db-cache-defaultdenyall-c802063e
spec:
  podSelector:
    matchLabels:
      cdk8s.io/metadata.addr: web-cache-db-Cache-c8f87d6f
  policyTypes:
    - Egress
    - Ingress
---
apiVersion: v1
kind: Service
metadata:
  name: web-cache-db-cache-service-c89c708c
spec:
  externalIPs: []
  ports:
    - port: 6379
      targetPort: 6379
  selector:
    cdk8s.io/metadata.addr: web-cache-db-Cache-c8f87d6f
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allowegressc89da2cbceb7c9d75572fb752497ec95bc-c8c00844
spec:
  egress:
    - ports:
        - port: 3306
          protocol: TCP
      to:
        - podSelector:
            matchLabels:
              cdk8s.io/metadata.addr: web-cache-db-DB-c89da2cb
  podSelector:
    matchLabels:
      cdk8s.io/metadata.addr: web-cache-db-Cache-c8f87d6f
  policyTypes:
    - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allowingressundefinedc89da2cbceb7c9d75572fb75-c80c3aef
spec:
  ingress:
    - from:
        - podSelector:
            matchLabels:
              cdk8s.io/metadata.addr: web-cache-db-Cache-c8f87d6f
      ports:
        - port: 3306
          protocol: TCP
  podSelector:
    matchLabels:
      cdk8s.io/metadata.addr: web-cache-db-DB-c89da2cb
  policyTypes:
    - Ingress
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: rolec86525e0774d77eb60cd0de99fd358d384c391ab8-c81dd0ef
rules:
  - apiGroups:
      - apps
    resourceNames:
      - web-cache-db-cache-c80d6033
    resources:
      - deployments
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
      - deletecollection
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: rolebindingc86525e0774d77eb60cd0de99fd358d384-c83fd176
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: rolec86525e0774d77eb60cd0de99fd358d384c391ab8-c81dd0ef
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: frontoffice
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-cache-db-web-c81d4f35
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 2
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: web-cache-db-Web-c80a671e
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: web-cache-db-Web-c80a671e
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: optimized
                    operator: In
                    values:
                      - memory
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  cdk8s.io/metadata.addr: web-cache-db-Cache-c8f87d6f
              topologyKey: kubernetes.io/hostname
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  cdk8s.io/metadata.addr: web-cache-db-Web-c80a671e
              topologyKey: kubernetes.io/hostname
            - labelSelector:
                matchLabels:
                  cdk8s.io/metadata.addr: web-cache-db-Web-c80a671e
              topologyKey: topology.kubernetes.io/zone
      automountServiceAccountToken: true
      containers:
        - env:
            - name: CACHE_HOST
              value: web-cache-db-cache-service-c89c708c
            - name: CACHE_PORT
              value: "6379"
          image: tomcat:jre11-temurin-jammy
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            tcpSocket:
              port: 8080
          name: main
          ports:
            - containerPort: 8080
          readinessProbe:
            failureThreshold: 3
            tcpSocket:
              port: 8080
          resources:
            limits:
              cpu: 200m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 50Mi
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
            readOnlyRootFilesystem: true
            runAsNonRoot: false
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 8080
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: web-cache-db-web-defaultdenyall-c83b757c
spec:
  podSelector:
    matchLabels:
      cdk8s.io/metadata.addr: web-cache-db-Web-c80a671e
  policyTypes:
    - Egress
    - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allowegressc8f87d6f03ebfab41948060e451b8aa714-c8f06af0
spec:
  egress:
    - ports:
        - port: 6379
          protocol: TCP
      to:
        - podSelector:
            matchLabels:
              cdk8s.io/metadata.addr: web-cache-db-Cache-c8f87d6f
  podSelector:
    matchLabels:
      cdk8s.io/metadata.addr: web-cache-db-Web-c80a671e
  policyTypes:
    - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allowingressundefinedc8f87d6f03ebfab41948060e-c8374d18
spec:
  ingress:
    - from:
        - podSelector:
            matchLabels:
              cdk8s.io/metadata.addr: web-cache-db-Web-c80a671e
      ports:
        - port: 6379
          protocol: TCP
  podSelector:
    matchLabels:
      cdk8s.io/metadata.addr: web-cache-db-Cache-c8f87d6f
  policyTypes:
    - Ingress
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: rolec86525e0774d77eb60cd0de99fd358d384c391ab8-c8f42100
rules:
  - apiGroups:
      - apps
    resourceNames:
      - web-cache-db-web-c81d4f35
    resources:
      - deployments
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
      - deletecollection
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: rolebindingc86525e0774d77eb60cd0de99fd358d384-c8d24a75
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: rolec86525e0774d77eb60cd0de99fd358d384c391ab8-c8f42100
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: frontoffice
---
apiVersion: v1
kind: Service
metadata:
  name: web-cache-db-web-service-c88d0721
spec:
  externalIPs: []
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    cdk8s.io/metadata.addr: web-cache-db-Web-c80a671e
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: web-cache-db-nginx-c853d4df
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nginx
    app.kubernetes.io/version: 1.25.3
    helm.sh/chart: nginx-15.4.4
  name: web-cache-db-nginx-c853d4df
  namespace: test-app
spec:
  externalTrafficPolicy: Cluster
  ports:
    - name: http
      port: 80
      targetPort: http
  selector:
    app.kubernetes.io/instance: web-cache-db-nginx-c853d4df
    app.kubernetes.io/name: nginx
  sessionAffinity: None
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: web-cache-db-nginx-c853d4df
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nginx
    app.kubernetes.io/version: 1.25.3
    helm.sh/chart: nginx-15.4.4
  name: web-cache-db-nginx-c853d4df
  namespace: test-app
spec:
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: web-cache-db-nginx-c853d4df
      app.kubernetes.io/name: nginx
  strategy:
    rollingUpdate: {}
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: web-cache-db-nginx-c853d4df
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: nginx
        app.kubernetes.io/version: 1.25.3
        helm.sh/chart: nginx-15.4.4
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: web-cache-db-nginx-c853d4df
                    app.kubernetes.io/name: nginx
                topologyKey: kubernetes.io/hostname
              weight: 1
      automountServiceAccountToken: false
      containers:
        - env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: NGINX_HTTP_PORT_NUMBER
              value: "8080"
          image: docker.io/bitnami/nginx:latest
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 5
          name: nginx
          ports:
            - containerPort: 8080
              name: http
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 3
          resources:
            limits: {}
            requests: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
      hostIPC: false
      hostNetwork: false
      securityContext:
        fsGroup: 1001
        sysctls: []
      serviceAccountName: default
      shareProcessNamespace: false
